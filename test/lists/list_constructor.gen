var empty_list = List();
print(empty_list); # expect: []

var list_with_args = List(1, 2, 3);
print(list_with_args); # expect: [1, 2, 3]

var mixed_list = List("hello", 42, nil, true);
print(mixed_list); # expect: [hello, 42, nil, true]

# Test that the constructed list behaves like a normal list
var constructed_list = List(1, 2, 3);
print(len(constructed_list)); # expect: 3
constructed_list.append(4);
print(constructed_list); # expect: [1, 2, 3, 4]

var explicit_init = constructed_list.__init__(4, 3, 2);
print(explicit_init);  # expect: [4, 3, 2]
print(constructed_list);  # expect: [4, 3, 2]


# Set from iterable
var tuple = Tuple(1, 2, 3, 3);
var list_from_tuple = List(tuple);
print(list_from_tuple); # expect: [1, 2, 3, 3]

# One item non-iterable
var list_from_single = List(42);
print(list_from_single); # expect: [42]

# One item non-iterable instance
class A {}
var list_from_single_instance = List(A());
print(list_from_single_instance); # expect: [<A instance>]
