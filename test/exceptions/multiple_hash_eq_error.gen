// Test that errors in __eq__ are properly handled when multiple objects have identical hash

class HashCollision {
    __init__(id) {
        this.id = id;
    }
    
    __hash__() {
        return 123; // Deliberate hash collision
    }
    
    __eq__(other) {
        if this.id == 2 {
            throw TypeError("Comparison failed for id 2");
        }
        return this.id == other.id;
    }
}

var obj1 = HashCollision(1);
var obj2 = HashCollision(2);
var obj3 = HashCollision(3);

var s = {obj1};

try {
    // This should work fine
    s[obj3] = true;
    print("obj3 added successfully");
    
    // This should trigger an error during equality check
    s[obj2] = true;
    print("Should not reach here");
} catch TypeError as e {
    print("Caught TypeError: " + e.message()); # expect: Caught TypeError: Comparison failed for id 2
}

print("Test completed"); # expect: Test completed