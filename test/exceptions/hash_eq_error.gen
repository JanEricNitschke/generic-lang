// Test that errors in __eq__ during hash collection checking are properly handled

class BadEq {
    __init__(value) {
        this.value = value;
    }
    
    __hash__() {
        return 42; // Same hash for all instances to force equality check
    }
    
    __eq__(other) {
        throw ValueError("Error in __eq__ method");
    }
}

var obj1 = BadEq(1);
var obj2 = BadEq(2);

var d = {obj1: "first"};

try {
    // This should trigger __eq__ check during insertion due to hash collision
    d[obj2] = "second";
    print("Should not reach here");
} catch ValueError as e {
    print("Caught ValueError: " + e.message()); # expect: Caught ValueError: Error in __eq__ method
}

print("Test completed successfully"); # expect: Test completed successfully