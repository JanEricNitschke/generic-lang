class Error1 < Exception {}
class Error2 < Exception {}

fun inner_1() {
    try {
        throw Error2("error message");
        print("Try");
    } catch Error1 as e {
        print(e);
    } else {
        print("Else Inner");
    }
}

fun inner_2() {
    try {
        throw Error1("error message");
        print("Try");
    } catch Error1 as e {
        print(e); 
    } else {
        print("Else Inner");
    }
}


try {
    inner_1();
} catch Error2 as e {
    print(e); # expect: Error2: error message
              # expect: Stacktrace (most recent call last):
              # expect:   [line 28] in <script>
              # expect:   [line 6] in inner_1
} else {
    print("Else Outer");
}

try {
    inner_2(); # expect: Error1: error message
               # expect: Stacktrace (most recent call last):
               # expect:   [line 39] in <script>
               # expect:   [line 17] in inner_2
} catch Error2 as e {
    print(e);
} else {
    print("Else Outer"); # expect: Else Outer
}

print("Done"); # expect: Done
